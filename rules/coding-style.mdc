---
description: 
globs: *.ts,*.tsx,*.css,*.yaml,*.md,*.py,*.rs,*.html,*.yml,*.toml,Dockerfile,Makefile
alwaysApply: false
---
# Coding Style & Quality Guidelines

- **Structure:** Organize code by feature/responsibility; use best practice
- **Simplicity:** Write clear, simple code; avoid unnecessary complexity.
- **Line Length:** Max 120 chars
- **Indentation:** 2 spaces
- **Type Annotations:** Always use (TypeScript, Python)
- **Docs:**
  - Public functions/classes/modules: concise docstrings (Python) or JSDoc/TSDoc (TS)
- **Error Handling:**
  - Handle errors explicitly; never use bare except/catch
- **Immutability:**
  - Prefer immutable data; do not mutate function args
- **Testing:**
  - All new code must have automated tests
  - Tests must pass before completion
  - Update tests after logic changes.
  - Each feature requires at a minimum:
    - 1 expected use test
    - 1 edge case test
    - 1 failure case test
- **Dependencies:**
  - Minimize external deps
  - Prefer standard library or well-known and widely used libraries
  - Use relative imports within packages.
- **Formatting and Linting:**
  - Use auto-formatters (Ruff, Prettier, Clippy, ESLint, etc.)
- **Comments:**
  - Only explain *why*, not *what*
- **Cleanliness:**
  - Remove unused code, vars, imports
- **Security:**
  - Follow secure coding; never commit secrets/credentials
- **Configuration:**
  - Load secrets, URLs, hostnames from environment variables, `.env`, or `.env.local`.
  - Add examples to dotenv.example
- **Refactoring:**
  - Keep code small, elegant, readable
  - Split into logical files/modules
  - Max file size: 500 lines. Refactor if needed.
- **Checks:**
  - Fix all linter/type/build/test/deploy errors

**Goal:**
Elegant, simple, maintainable, secure, robust code meeting project/industry standards.
