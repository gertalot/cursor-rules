---
description: 
globs:
alwaysApply: false
---

# Rewrite Rule

**Goal:**
Transform markdown or prompts into concise, clear, and efficient LLM instructions. Minimize tokens, but ensure
legibility. Output should be ready for direct LLM use, preserving all essential requirements and technical details.

## Instructions

- Rewrite for clarity and brevity.
- Keep all requirements, technical details, and code patterns.
- Remove redundancy and ambiguity.
- Use concise language, bullet points, and direct instructions.

## Process

1. **Analyze** the document for core concepts, purpose, and requirements.
2. **Distill** contentâ€”condense and restructure as needed.
3. **Identify** and resolve gaps or ambiguities; ask clarifying questions if needed.
4. **Ensure** the rewrite:
   - Retains all requirements and technical details.
   - Includes all essential code patterns, tasks, and architectural decisions.
   - Is thorough, precise, and optimized for LLMs.
5. **Improve**:
   - Structure
   - Clarity and conciseness
   - Token efficiency
6. **Follow** all explicit user requests and consider prior actions.

## Output Format

- Output the entire rewritten document as preformatted markdown.
- Use triple backticks with `markdown`.
- **ðŸš¨ ABSOLUTELY NEVER output anything except the code block. No explanations, no commentary, no extra text. ðŸš¨**
- **MANDATORY:**
  - **Output ONLY the rewritten document inside the code block.**
  - **If you violate this, it is a critical error.**
