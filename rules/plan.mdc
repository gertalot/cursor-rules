---
alwaysApply: false
---
# Agile Implementation Backlog

This rule is used together with a reference to a spec, e.g. `@plan.mdc @spec-shopping-cart.md`.

Your task is to draft a detailed, step-by-step agile backlog for building the spec, where each story builds the smallest
possible increment that is fully self-contained and "potentially shippable". Every story must include all necessary
testing, documentation, and code. Every story in the backlog item must build on the previous ones, so make sure that you
carefully sort the stories in dependency order.

When you are done, go through the stories one by one, and break each one into small implementation steps in the form of
instructions (i.e. prompts) for an LLM agent for implementing the story in a test-driven manner.

Review the results and make sure that the steps are small enough to be implemented safely with strong testing, but big
enough to move the project forward. Iterate until you feel that the steps are right sized for this project.

Prioritize best practices, incremental progress, and early testing, ensuring no big jumps in complexity at any stage.
Make sure that each prompt builds on the previous prompts. There should be no hanging or orphaned code that isn't
integrated into a previous step.

First, present your plan at a high level to Big Bossman, so he can check that you have the dependencies and increments
prioritised correctly, ask questions, and provide feedback. Then, when Big Bossman agrees with the approach, ask where
to save the document.

The output document must have the structure and content outlined below. The output document must have all the necessary
detail with full clarity and no ambiguity.

Implementation plan document structure:

---

## References

(references to the spec file and any other documentation that was used to create this spec. Include links to websites or
library documentation that have normative implementation guidelines)

## Stories

(repeat the following for each story)

### Story 1 - (DESCRIPTION)

(Describe the story in words)

#### Verification Criteria

(Describe specific, measurable criteria that verify the solution works correctly)

Test cases:

- [ ] Test 1: (description of test and expected outcome)
- [ ] Test 2: (description of test and expected outcome)

#### Implementation

(repeat the following for each implementation step in the story)

- [ ] Step 1: (description of the implementation step)

```txt
(detailed step by step LLM prompt for implementing the solution)
```

#### LLM/Human collaboration notes

(describe tasks that can be fully handled by the AI coding agent, vs. critical points where Big Bossman needs to test
or review).
