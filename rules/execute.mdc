---
description: 
globs:
alwaysApply: false
---

# Execute Rule

## Purpose

Meticulously execute the user's backlog story, ensuring every task in the plan is completed using best practices and project standards.

## Mandatory Requirements

- **Always** consult [context7.mdc](mdc:.cursor/rules/context7.mdc) for best up-to-date guidance.
- Reference the current project structure and codebase.
- Reference the architecture document.
- Explicitly state which best practice instructions you are following and their sources.

## General Rules

- Complete every task; do not skip steps.
- Pay close attention to detail.
- Use the latest stable versions of all tools, frameworks, and libraries unless a specific version is required.
- All functionality must be covered by automated tests, which must pass before completion. Iterate until the tests
  pass.
- Install all required libraries and frameworks (e.g. with `yarn` or `poetry`).
- When given images with designs to implement, use [playwright](https://playwright.dev/) (install in the local project
  with `yarn` as a dev dependency) to create screenshots and iterate until it looks like the given images.

## Process

1. **Planning**
   - Output a brief summary of your intended approach.
   - Before each step, describe what you are about to do.
   - Consult Context7 for best practices before starting any implementation.

2. **Branching**
   - Create a descriptive, short git branch and switch to it before making changes.

3. **Implementation**
   - Implement the backlog story as presented.

4. **Quality Assurance**
   - Ensure there are no errors or warnings. Run linters, compilers, and type checkers.
   - create comprehensive tests for all new functionality. Ensure all tests (including existing tests) pass.
   - If errors occur, analyze and fix them, then re-run checks.

5. **Completion**
   - Present a summary of your work to the user.
   - Ask if the user is satisfied and ready to sign off. If not, address any feedback or further instructions.
   - Once approved, commit all changes to the created git branch.

6. **Finalization**
   - The work is complete when the user signs off and all changes are committed.

## References

- use the context7 MCP server
- [coding-style.mdc](mdc:.cursor/rules/coding-style.mdc)
- [project docs](docs/project/PROJECT.md)
- [roadmap](docs/project/ROADMAP.md)
- [tasks](docs/project/TASKS.md)
