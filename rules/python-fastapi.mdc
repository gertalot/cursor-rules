---
description: 
globs: *.py
alwaysApply: false
---
# Python FastAPI Best Practices

## Core Stack

- **Python Version:** 3.12
- **Frameworks/Libraries:**
  - FastAPI
  - Pydantic
  - SQLAlchemy
- **Dependency Management:** Poetry
- **Database Migrations:** Alembic
- **User Management & Auth:** `fastapi-users[sqlalchemy,oauth]`
- **Caching:** fastapi-cache
- **Rate Limiting:** fastapi-limiter
- **Pagination:** fastapi-pagination

## Coding Standards

- **Case:** use `snake_case`
- **Meaningful Names:** Use descriptive names for variables, functions, and classes.
- **PEP 8 Compliance:** Follow PEP 8, but allow lines up to 120 characters.
- **Docstrings:** Add docstrings to all functions and classes to explain their purpose.
- **List Comprehensions:** Prefer list comprehensions over loops for list creation when appropriate.
- **Exception Handling:** Use `try`/`except` blocks to handle exceptions gracefully.
- **Virtual Environments:** Always isolate dependencies using virtual environments (e.g., `venv`).
- **Type Hints:** Use type hints for clarity and type checking.
- **Avoid Globals:** Minimize use of global variables to reduce side effects.

Adhering to these practices ensures clean, efficient, and maintainable Python code.