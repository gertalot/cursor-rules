---
description: test driven development (TDD) rules for all code changes
globs:
alwaysApply: false
---

# Testing Rules

- **Comprehensive Coverage:** All functionality MUST have tests (unit, integration, end-to-end). The only exception is
  if **Gert** explicitly states: "I AUTHORIZE YOU TO SKIP WRITING TESTS THIS TIME."
- **TDD Workflow for Every Feature / Bugfix:**
  1. Write a failing test that validates the desired behaviour.
  2. Run the test to confirm it fails.
  3. Write only enough code to make the failing test pass.
  4. Run the tests to confirm success.
  5. Refactor while keeping tests green.
- **No Mock-Only Tests:** NEVER write a test that merely checks mocked behaviour of the code under test. If such a test
  exists, STOP and warn **Gert**.
- **Real Systems in E2E:** NEVER mock functionality in end-to-end tests; use real data and real APIs.
- **Respect Output:** NEVER ignore system or test outputâ€”logs and messages often contain critical information.
- **Pristine Output:** Test runs must finish cleanly. If errors are expected, capture and assert on them explicitly.
description: globs: alwaysApply: false
